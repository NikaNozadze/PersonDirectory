@model PersonDirectory.Model.ViewModels.PhoneNumberViewModel

<style>
    #title {
        margin-left: -30px;
        font-size: 48px;
        font-weight: bold;
        color: rgba(179, 165, 5, 0.7);
        text-align: right;
    }

    #main_div1 {
        height: 50vh;
        width: 90%;
        margin-top: 100px;
        margin-left: auto;
        margin-right: auto;
        background-color: rgba(38, 37, 38, 0.7);
    }

    #div2 {
        height: 30vh;
        width: 80%;
        margin-top: 10px;
        margin-left: auto;
        margin-right: auto;
    }

    .form-group {
        color: white;
    }

    #add_back_Buttons {
        margin-top: 43px;
    }

    #addButton {
        background-color: rgba(4, 21, 51, 0.7);
    }

        #addButton:hover {
            background-color: rgba(28, 28, 28);
            color: rgb(150, 139, 3);
        }

    #button {
        font-size: 28px;
        font-weight: bold;
        width: 400px;
        height: 200px;
        margin: 20px;
        margin-left: 3%;
        background-color: rgba(4, 21, 51, 0.7);
        color: white;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
        border-radius: 20px;
    }

        #button:hover {
            background-color: rgba(28, 28, 28);
            color: rgb(150, 139, 3);
        }

    .error-message {
        color: red;
        font-weight: bold;
        border: 2px solid red;
        padding: 10px;
        border-radius: 5px;
    }
</style>

<form method="post" enctype="multipart/form-data">
    <div class="row pb-2">
        <h2 style="font-weight: bold; color: #aba9a7; margin-top: 20px;">@Model.Localizer["Update Phone Number"]</h2>
        <hr style="margin-top: 10px;" />
    </div>
    <div class="row">

        <span id="title">@Model.Localizer["Update Phone Number"]</span>
        <div id="div2">
            <div class="form-group">
                <label asp-for="PersonId">@Model.Localizer["Person"]:</label>
                <input asp-for="PersonId" type="text" id="personInput" class="form-control" list="personList" placeholder="@Model.Localizer["Type to filter Persons"]" required>
                <datalist id="personList">
                    @foreach (var person in Model.Persons)
                    {
                        <option value="@person.Id">@person.FirstName @person.LastName @person.PersonalNumber</option>
                    }
                </datalist>
            </div>
            <div class="form-group">
                <label asp-for="Number">@Model.Localizer["Phone Number"]:</label>
                <input asp-for="Number" type="text" id="phone_number" class="form-control" required minlength="4" maxlength="50" />
            </div>
            <div class="form-group">
                <label asp-for="Type">@Model.Localizer["Phone Number Type"]:</label>
                <select asp-for="Type" id="phone_type" class="form-select" required>
                    <option value="0">@Model.Localizer["Mobile"]</option>
                    <option value="1">@Model.Localizer["Office"]</option>
                    <option value="2">@Model.Localizer["Home"]</option>
                </select>
            </div>
            @if (!string.IsNullOrEmpty(@Model.ErrorMessage))
            {
                <div style="margin-top: 20px" class="error-message">
                    @Model.ErrorMessage
                </div>
            }
            <div id="add_back_Buttons">
                <div style="margin-top: 20px;"></div>

                <button type="submit" class="btn btn-primary" id="addButton" style="width: 150px; font-size: 20px;">@Model.Localizer["Update"]</button>
                <a asp-controller="Home" asp-action="Index" class="btn btn-secondary" style="width: 150px; font-size: 20px;">
                    @Model.Localizer["Back"]
                </a>
            </div>
        </div>
    </div>
</form>

<script>
    function validatePhoneNumber(inputElement) {
        var inputValue = inputElement.value;
        var isValidPhoneNumber = /^[0-9]+$/.test(inputValue);

        if (isValidPhoneNumber && inputValue.length >= 4 && inputValue.length <= 50) {
            inputElement.setCustomValidity("");
        } else {
            var localizedMessage = "@Html.Raw(Model.Localizer["Please enter between 4 and 50 digits for the phone number."])";
            inputElement.setCustomValidity(localizedMessage);
        }
    }

    document.getElementById('phone_number').addEventListener('input', function (event) {
        validatePhoneNumber(event.target);
    });
</script>