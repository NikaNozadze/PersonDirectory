@model PersonDirectory.Model.ViewModels.PersonViewModel

<style>
    #title {
        margin-left: -30px;
        font-size: 48px;
        font-weight: bold;
        color: rgba(179, 165, 5, 0.7);
        text-align: right;
    }

    #main_div1 {
        height: 50vh;
        width: 90%;
        margin-top: 100px;
        margin-left: auto;
        margin-right: auto;
        background-color: rgba(38, 37, 38, 0.7);
    }

    #div2 {
        height: 50vh;
        width: 80%;
        margin-top: -400px;
        margin-left: 67%;
    }

    .form-group {
        color: white;
    }

    #photoButtons {
        margin-top: 10px;
        margin-left: 28px;
    }

    #deleteButton {
        height: 40px;
        width: 150px;
    }

    #uploadButton {
        height: 40px;
        width: 150px;
        background-color: rgba(86, 109, 148, 0.7);
        cursor: pointer;
    }

        #uploadButton:hover {
            background-color: rgb(49, 63, 87);
        }

    #add_back_Buttons {
        margin-top: 43px;
        margin-left: 28px;
    }

    #addButton {
        background-color: rgba(4, 21, 51, 0.7);
    }

        #addButton:hover {
            background-color: rgba(28, 28, 28);
            color: rgb(150, 139, 3);
        }

    #button {
        font-size: 28px;
        font-weight: bold;
        width: 400px;
        height: 200px;
        margin: 20px;
        margin-left: 3%;
        background-color: rgba(4, 21, 51, 0.7);
        color: white;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
        border-radius: 20px;
    }

        #button:hover {
            background-color: rgba(28, 28, 28);
            color: rgb(150, 139, 3);
        }

    .error-message {
        color: red;
        font-weight: bold;
        border: 2px solid red;
        padding: 10px;
        border-radius: 5px;
    }
</style>

<form method="post" enctype="multipart/form-data">
    <div class="row pb-2">
        <h2 style="font-weight: bold; color: #aba9a7;">@Model.Localizer["Create Person"]</h2>
        <hr style="margin-top: 10px;" />
    </div>
    <div class="row">

        <span id="title">@Model.Localizer["Add Person"]</span>
        <img id="uploadedImage" style="width: auto; height: 400px; margin-left: 30px; margin-top: 20px;" src="@Url.Content("~/images/NoPersonImage.png")" class="card-img-top" alt="...">
           
        <div class="col-md-8">
            <div id="div2">
                <div class="form-group">
                    <label asp-for="FirstName">@Model.Localizer["Name"]:</label>
                    <input asp-for="FirstName" type="text" id="name" class="form-control" required minlength="2" maxlength="50" pattern="[A-Za-zა-ჰ]{2,50}" />
                </div>
                <div class="form-group">
                    <label asp-for="LastName">@Model.Localizer["Surname"]:</label>
                    <input asp-for="LastName" type="text" id="surname" class="form-control" required minlength="2" maxlength="50" pattern="[A-Za-zა-ჰ]{2,50}" />
                </div>
                <div class="form-group">
                    <label asp-for="Gender">@Model.Localizer["Gender"]:</label>
                    <select asp-for="Gender" id="gender" class="form-control" required>
                        <option value="0">Male</option>
                        <option value="1">Female</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="PersonalNumber">@Model.Localizer["Personal Number"]:</label>
                    <input asp-for="PersonalNumber" type="text" id="personal_number" class="form-control" required minlength="11" maxlength="11" pattern="\d{11}" />
                </div>
                <div class="form-group">
                    <label asp-for="DateOfBirth">@Model.Localizer["Date of Birth"]:</label>
                    <input asp-for="DateOfBirth" type="date" id="dob" class="form-control" required />
                </div>
                <div class="form-group">
                    <label asp-for="CityName">@Model.Localizer["City"]:</label>
                    <input asp-for="CityName" type="text" id="cityInput" class="form-control" list="cityList" placeholder="@Model.Localizer["Type to filter cities"]" required>
                    <datalist id="cityList">
                        @foreach (var city in Model.CityModels)
                        {
                            <option>@city.Name</option>
                        }
                    </datalist>
                </div>
                @if (!string.IsNullOrEmpty(@Model.ErrorMessage))
                {
                    <div style="margin-top: 20px" class="error-message">
                        @Model.ErrorMessage
                    </div>
                }
            </div>

            <div id="photoButtons" class="form-group">
                <input type="file" name="imageFile" id="imageInput" accept="image/*" style="display: none;">
                <button type="button" class="btn btn-primary" id="uploadButton" style="font-size: 13px;">@Model.Localizer["Upload Image"]</button>

                <input type="hidden" name="deleteImageFile" id="deleteImageInput" value="">
                <button type="button" class="btn btn-danger" id="deleteButton" style="font-size: 13px;">@Model.Localizer["Delete Image"]</button>
            </div>

            <div id="add_back_Buttons">
                <div style="margin-top: 20px;"></div>

                <button type="submit" class="btn btn-primary" id="addButton" style="width: 150px; font-size: 20px;">@Model.Localizer["Add"]</button>
                <a asp-controller="Home" asp-action="Index" class="btn btn-secondary" style="width: 150px; font-size: 20px;">
                    @Model.Localizer["Back"]
                </a>
            </div>
        </div>
    </div>
</form>

<script>
    function validateNameAndSurname() {
        var nameValue = document.getElementById('name').value;
        var surnameValue = document.getElementById('surname').value;
        var isNameEmpty = nameValue.trim() === "";
        var isSurnameEmpty = surnameValue.trim() === "";
        var isNameLatin = /^[A-Za-z]*$/.test(nameValue);
        var isNameGeorgian = /^[\u10D0-\u10F6]*$/.test(nameValue);
        var isSurnameLatin = /^[A-Za-z]*$/.test(surnameValue);
        var isSurnameGeorgian = /^[\u10D0-\u10F6]*$/.test(surnameValue);

        if (((isNameLatin && isSurnameLatin) || (isNameGeorgian && isSurnameGeorgian)) || (isNameEmpty || isSurnameEmpty)) {
            document.getElementById('name').setCustomValidity("");
            document.getElementById('surname').setCustomValidity("");
        } else {
            var localizedMessage = "@Html.Raw(Model.Localizer["Name and surname should both be either Latin or Georgian."])";
            document.getElementById('name').setCustomValidity(localizedMessage);
            document.getElementById('surname').setCustomValidity(localizedMessage);
        }
    }

    document.getElementById('name').addEventListener('input', validateNameAndSurname);
    document.getElementById('surname').addEventListener('input', validateNameAndSurname);


    function validateInput(inputElement) {
        var inputValue = inputElement.value;
        var isGeorgian = /^[\u10D0-\u10F6]+$/.test(inputValue);
        var isLatin = /^[A-Za-z]+$/.test(inputValue);

        if ((isGeorgian || isLatin) && inputValue.length >= 2 && inputValue.length <= 50) {
            inputElement.setCustomValidity("");
        } else {
            var localizedMessage = "@Html.Raw(Model.Localizer["Please enter between 2 and 50 characters, using only Georgian or Latin letters."])";
            inputElement.setCustomValidity(localizedMessage);
        }
    }

    document.getElementById('name').addEventListener('input', function (event) {
        validateInput(event.target);
    });
    document.getElementById('surname').addEventListener('input', function (event) {
        validateInput(event.target);
    });


    function validatePersonalNumber(inputElement) {
        var inputValue = inputElement.value;
        var isDigits = /^\d{11}$/.test(inputValue);

        if (isDigits) {
            inputElement.setCustomValidity("");
        } else {
            var localizedMessage = "@Html.Raw(Model.Localizer["Please enter 11 digits for the personal number."])";
            inputElement.setCustomValidity(localizedMessage);
        }
    }

    document.getElementById('personal_number').addEventListener('input', function (event) {
        validatePersonalNumber(event.target);
    });


    function validateDateOfBirth(inputElement) {
        var inputValue = inputElement.value;
        var selectedDate = new Date(inputValue);
        var currentDate = new Date();
        var minDate = new Date();

        minDate.setFullYear(minDate.getFullYear() - 18);

        if (isNaN(selectedDate.getTime())) {
            var localizedMessage = "@Html.Raw(Model.Localizer["Please enter a valid date."])";
            inputElement.setCustomValidity(localizedMessage);
            return false;
        }

        if (selectedDate > currentDate) {
            var localizedMessage = "@Html.Raw(Model.Localizer["Date of birth cannot be in the future."])";
            inputElement.setCustomValidity(localizedMessage);
            return false;
        }

        if (selectedDate > minDate) {
            var localizedMessage = "@Html.Raw(Model.Localizer["You must be at least 18 years old."])";
            inputElement.setCustomValidity(localizedMessage);
            return false;
        }

        inputElement.setCustomValidity("");
        return true;
    }

    document.getElementById('dob').addEventListener('change', function (event) {
        validateDateOfBirth(event.target);
    });


    document.getElementById('uploadButton').addEventListener('click', function () {
        document.getElementById('imageInput').click();
    });
    document.getElementById('imageInput').addEventListener('change', function (event) {
        var uploadedImage = document.getElementById('uploadedImage');
        uploadedImage.src = URL.createObjectURL(event.target.files[0]);
        document.getElementById('deleteImageInput').value = "";
    });

    document.getElementById('deleteButton').addEventListener('click', function () {
        var preview = document.getElementById('uploadedImage');
        preview.src = "/images/NoPersonImage.png";
        document.getElementById('deleteImageInput').value = "/images/NoPersonImage.png";
        document.getElementById('imageInput').value = "";
    });
</script>